{{ define "connections" }}
{{- /*
Content: Content
Prefix: string, e.g. "c", "item"
Parent: string
    piece of information to be included in the connection for child references
    e.g. so that if person played in a single eposide, the connection info will
    include episode name (or whatever is passed in the parent field)
Meta: string
    additional information to change the default behavior of the connection
Depth: int
    depth of the recursion, used for debugging purposes
*/ -}}
{{- range .Content.Properties }}
{{- $path := rootTypePath .Type }}
{{- if eq .Type "reference" }}
if {{ $.Prefix }}.{{ titleCase .Name }} != nil {
    connections = append(connections, Connection{
        To: {{ $.Prefix }}.{{ titleCase .Name }}.Path,
        Label: "{{ .Label }}",
        {{ with .Meta }}Meta: "{{ . }}",{{ end }}
    })
}
{{- else if $path }}
if {{ $.Prefix }}.{{ titleCase .Name }} != "" {
    connections = append(connections, Connection{
        To: "{{ $path }}/" + {{ $.Prefix }}.{{ titleCase .Name }},
        Label: "{{ if .Label }}{{ .Label }}{{ else }}{{ titleCase .Name }}{{ end }}",
        {{- if eq $.Meta "parent" }}
        {{ with .Info }}Parent: {{ structRef . $.Prefix false }},{{ end }}
        {{- else }}
        {{ with .Info }}Info: {{ structRef . $.Prefix false }},{{ end }}
        {{ with $.Parent }}Parent: {{ structRef . $.Prefix false }},{{ end }}
        {{- end }}
    })
}
{{- else if and (eq .Type "array") (eq .Items.Type "reference") }}
for _, {{ camelCaseConcat $.Prefix .Items.Type }} := range {{ $.Prefix }}.{{ titleCase .Name }} {
    connections = append(connections, Connection{
        To: {{ camelCaseConcat $.Prefix .Items.Type }}.Path,
        Label: "{{ if .Label }}{{ .Label }}{{ else }}{{ titleCase .Name }}{{ end }}",
        {{ with .Meta }}Meta: "{{ . }}",{{ end }}
    })
}
{{- else if and (eq .Type "array") (rootTypePath .Items.Type) }}
for _, {{ camelCaseConcat $.Prefix .Items.Type }} := range {{ $.Prefix }}.{{ titleCase .Name }} {
    connections = append(connections, Connection{
        To: "{{ rootTypePath .Items.Type}}/" + {{ camelCaseConcat $.Prefix .Items.Type }},
        Label: "{{ if .Label }}{{ .Label }}{{ else }}{{ titleCase .Name }}{{ end }}",
        {{ with .Info }}Parent: {{ structRef . $.Prefix false }},{{ end }}
    })
}
{{- else if and (eq .Type "array") (extraType .Items.Type) }}
for _, {{ camelCaseConcat $.Prefix .Items.Type }} := range {{ $.Prefix }}.{{ titleCase .Name }} {
    {{- template "connections" dict
        "Content" (lookupExtraType .Items.Type)
        "Prefix" (camelCaseConcat $.Prefix .Items.Type)
        "Parent" (structRef .Info $.Prefix false)
        "Meta" .Meta
        "Depth" (add $.Depth 1)
    }}
}
{{- else if eq .Meta "series" }}
if {{ $.Prefix }}.{{ titleCase .Name }} != "" {
    connections = append(connections, Connection{
        To: {{ $.Prefix }}.{{ titleCase .Name }},
        {{ with .Meta }}Meta: "{{ . }}",{{ end }}
    })
}
{{- end }}
{{- end }}
{{- end }}
