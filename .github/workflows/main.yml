name: main

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Go Format
        run: gofmt -s -w -l $(find . -type f -name '*.go'| grep -v "/vendor/") && git diff --exit-code

      - name: Go Vet
        run: go vet ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest

      - name: Test
        run: go test -v -count=1 -race -shuffle=on -coverprofile=coverage.txt -json ./... > test.json

      - name: Annotate tests
        if: always()
        uses: guyarb/golang-test-annotations@v0.7.0
        with:
          test-results: test.json

      - name: Build and push to CR
        uses: chuhlomin/actions/docker-build-push@main
        env:
          DOCKER_IMAGE: ghcr.io/cultural-hub/finder
        with:
          registry: ghcr.io
          username: chuhlomin
          password: ${{ secrets.PKG_TOKEN }}
          image_name: ${{ env.DOCKER_IMAGE }}
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Clone info
        uses: actions/checkout@v4
        with:
          repository: cultural-hub/info
          path: info
          token: ${{ secrets.PKG_TOKEN }}

      - name: Create output directory
        run: mkdir output

      - name: Run action
        uses: ./
        with:
          info: ./info
          output: ./output

      - name: Copy static files
        run: cp static/* output/

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3.3.2
        if: github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip deploy]')
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          command: pages deploy output --project-name=finder --branch=main --commit-dirty=true
